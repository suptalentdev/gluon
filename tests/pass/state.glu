let prelude = import! std.prelude
let { Test, run, writer, assert, assert_eq, test, group, ? } = import! std.test
let int = import! std.int
let state @ { State, put, get, modify, runState, evalState, execState, ? } = import! std.state
let { Applicative, (*>), ? } = import! std.applicative

group "state" [
    test "modify execState" (assert_eq (execState (modify (\x -> x + 2) *> modify (\x -> x * 4)) 0) 8),
    test "modify evalState" (assert_eq (evalState (modify (\x -> x + 2) *> get) 0) 2),
    test "put get evalState" (assert_eq (evalState (put "hello" *> get) "") "hello"),
    test "put get runState" (assert_eq (runState (put "hello" *> get) "").value "hello"),
]

