let { run, writer, assert_eq }  = import! "std/test.glu"
let prelude  = import! "std/prelude.glu"
let { (*>) } = prelude.make_Applicative writer.applicative
let int = import! "std/int.glu"
let result = import! "std/result.glu"
let { Result } = result
let unit = import! "std/unit.glu"

let assert =
    assert_eq (result.show unit.show int.show )
              (result.eq unit.eq int.eq)

let { sender, receiver } = channel 0

send sender 0
send sender 1
send sender 2

let tests =
    assert (recv receiver) (Ok 0)
        *> assert (recv receiver) (Ok 1)
        *> assert (recv receiver) (Ok 2)

run tests
