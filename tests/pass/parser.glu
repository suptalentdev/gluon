let prelude = import! "std/prelude.glu"
let { show = show_String, eq = eq_String } = import! "std/string.glu"
let { Test, run, writer, assert, assert_eq } = import! "std/test.glu"
let { Writer } = import! "std/writer.glu"

let { Parser, applicative, functor, alternative, monad, any, parse } = import! "std/parser.glu"
let { (*>), wrap } = prelude.make_Applicative applicative
let { (<|>) } = prelude.make_Alternative alternative

let assert_parse show eq =
    assert_eq
        (prelude.show_Result show_String show)
        (prelude.eq_Result eq_String eq)

let tests =
    assert_parse prelude.show_Char prelude.eq_Char (parse any "abc") (Ok 'a')

run tests
