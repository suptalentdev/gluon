let { run, writer, assert_eq }  = import! "std/test.glu"
let prelude  = import! "std/prelude.glu"
let { (*>) } = prelude.make_Applicative writer.applicative
let int = import! "std/int.glu"
let list = import! "std/list.glu"
let option = import! "std/option.glu"

let test_alt show eq alt =
    let { (<|>), or, empty } = prelude.make_Alternative alt
    let { wrap } = alt.applicative

    let assert = assert_eq (show int.show) (eq int.eq)

    assert empty empty
        *> assert (empty <|> wrap 1) (wrap 1)
        *> assert (empty <|> empty) empty
        *> assert (empty <|> empty <|> wrap 10) (wrap 10)

test_alt option.show option.eq option.alternative
    *> test_alt list.show list.eq list.alternative
